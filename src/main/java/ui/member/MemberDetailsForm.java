package ui.member;

import ui.book.*;
import entities.Book;
import java.awt.HeadlessException;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import services.DBConnection;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import services.BookStore;
import services.TagStore;

public class MemberDetailsForm extends javax.swing.JFrame {
    DBConnection db = null;
    int id;
    Book currentBook;
    
    boolean isEditable = false;
    
    public MemberDetailsForm(int id) {
        initComponents();
        this.id = id;
        loadBooks();
    }

    final void loadBooks() {
        db = new DBConnection();

        try {
            Book book = BookStore.get(db, id);
            currentBook = book;
            Title.setText(book.name);
            FieldName.setText(book.name);
            FieldAuthor.setText(book.author);
            FieldDescription.setText(book.description);
            loadOneTag(book.tag);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
    
    private void loadOneTag(String tag) {
        String[] arr = {tag};
        FieldTag.setModel(new DefaultComboBoxModel(arr));
    }
    
    private void loadAllTags() {
        ArrayList<String> tags = TagStore.getAll(db);
        FieldTag.setModel(new DefaultComboBoxModel(tags.toArray()));
        FieldTag.setSelectedItem(currentBook.tag);
    }
    
    void editingLogic() {
        if (isEditable == false) {
            isEditable = true;
            ButtonEdit.setText("Confirmar");
            loadAllTags();
        } else {
            isEditable = false;

            String newName = FieldName.getText();
            String newAuthor = FieldAuthor.getText();
            String newDescription = FieldDescription.getText();
            String newTag = FieldTag.getSelectedItem().toString();
            
            System.out.println(newTag);

            String query = "UPDATE libro SET nombre = ?, autor = ?, descripcion = ?, genero = ? WHERE id = ?";

            try {
                db.open();
                
                PreparedStatement statement = db.connection.prepareStatement(query);
                statement.setString(1, newName);
                statement.setString(2, newAuthor);
                statement.setString(3, newDescription);
                statement.setString(4, newTag);
                statement.setInt(5, id);

                statement.execute();
                JOptionPane.showMessageDialog(null, "Libro editado correctamente.");
                Title.setText(newName);
                db.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
            ButtonEdit.setText("Editar");
            loadOneTag(newTag);
        }
        FieldName.setEditable(isEditable);
        FieldAuthor.setEditable(isEditable);
        FieldDescription.setEditable(isEditable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        Title = new javax.swing.JLabel();
        FieldName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        FieldAuthor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ButtonEdit = new javax.swing.JButton();
        GoBackButton = new javax.swing.JButton();
        DescriptionLabel = new javax.swing.JLabel();
        ButtonDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        FieldDescription = new javax.swing.JTextArea();
        DescriptionLabel1 = new javax.swing.JLabel();
        FieldTag = new javax.swing.JComboBox<>();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Añadir nuevo libro");
        setSize(new java.awt.Dimension(376, 131));

        Title.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Title.setForeground(new java.awt.Color(8, 8, 8));
        Title.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Title.setText("Título del libro");

        FieldName.setEditable(false);
        FieldName.setBackground(new java.awt.Color(255, 255, 255));
        FieldName.setForeground(new java.awt.Color(8, 8, 8));
        FieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FieldNameKeyPressed(evt);
            }
        });

        jLabel1.setText("Nombre");

        FieldAuthor.setEditable(false);
        FieldAuthor.setBackground(new java.awt.Color(255, 255, 255));
        FieldAuthor.setForeground(new java.awt.Color(8, 8, 8));
        FieldAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FieldAuthorKeyPressed(evt);
            }
        });

        jLabel2.setText("Autor");

        ButtonEdit.setForeground(new java.awt.Color(8, 8, 8));
        ButtonEdit.setText("Editar");
        ButtonEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonEditMouseClicked(evt);
            }
        });

        GoBackButton.setText("Volver");
        GoBackButton.setPreferredSize(new java.awt.Dimension(72, 32));
        GoBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GoBackButtonMouseClicked(evt);
            }
        });

        DescriptionLabel.setText("Descripción");

        ButtonDelete.setBackground(new java.awt.Color(204, 0, 0));
        ButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDelete.setText("Eliminar");
        ButtonDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonDeleteMouseClicked(evt);
            }
        });

        FieldDescription.setEditable(false);
        FieldDescription.setBackground(new java.awt.Color(255, 255, 255));
        FieldDescription.setColumns(20);
        FieldDescription.setLineWrap(true);
        FieldDescription.setRows(5);
        jScrollPane1.setViewportView(FieldDescription);

        DescriptionLabel1.setText("Género");

        FieldTag.setEditable(true);
        FieldTag.setMaximumRowCount(50);
        FieldTag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        FieldTag.setAutoscrolls(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FieldTag, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addComponent(DescriptionLabel))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(FieldAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(GoBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DescriptionLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ButtonEdit)))
                        .addGap(16, 16, 16)
                        .addComponent(ButtonDelete)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Title)
                    .addComponent(GoBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(DescriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(DescriptionLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FieldTag, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void returnToBooksList() {
        this.dispose();
        new MembersListForm().setVisible(true);
    }

    private void GoBackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackButtonMouseClicked
        returnToBooksList();
    }//GEN-LAST:event_GoBackButtonMouseClicked

    private void ButtonDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonDeleteMouseClicked
        int isSure = JOptionPane.showConfirmDialog(null, "¿Estás seguro de borrar el libro?", "Borrar el libro", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (isSure == JOptionPane.NO_OPTION) {
            return;
        }

        try {
            BookStore.delete(db, id);
            JOptionPane.showMessageDialog(null, "Libro eliminado correctamente.");
            returnToBooksList();
        } catch (HeadlessException ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_ButtonDeleteMouseClicked

    private void ButtonEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonEditMouseClicked
        editingLogic();
    }//GEN-LAST:event_ButtonEditMouseClicked

    private void FieldNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldNameKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER && isEditable == true) {
            editingLogic();
        }
    }//GEN-LAST:event_FieldNameKeyPressed

    private void FieldAuthorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldAuthorKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER && isEditable == true) {
            editingLogic();
        }
    }//GEN-LAST:event_FieldAuthorKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MemberDetailsForm(26).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonDelete;
    private javax.swing.JButton ButtonEdit;
    private javax.swing.JLabel DescriptionLabel;
    private javax.swing.JLabel DescriptionLabel1;
    private javax.swing.JTextField FieldAuthor;
    private javax.swing.JTextArea FieldDescription;
    private javax.swing.JTextField FieldName;
    private javax.swing.JComboBox<String> FieldTag;
    private javax.swing.JButton GoBackButton;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
